@page "/boards/{BoardId}/threads/"
@using Microsoft.AspNetCore.Blazor.Browser.Interop
@using Store
@inject Store store
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@implements IDisposable
@functions{

    protected override void OnInit()
    {
        store.ForumStore.OnChange += StateHasChanged;
    }

    protected override async void OnParametersSet()
    {
        await store.ForumStore.GetAllThreadsForBoard(int.Parse(BoardId));
        base.OnParametersSet();
    }

    public string BoardId { get; set; }
    public string Content { get; set; }

    public async void NewThread()
    {
        string image = RegisteredFunction.Invoke<string>("readImageTextThreads", true);
        if (!string.IsNullOrWhiteSpace(Content) || !string.IsNullOrWhiteSpace(image))
        {
            await store.ForumStore.PostThread(int.Parse(BoardId), Content, image);
            UriHelper.NavigateTo("/boards/" + store.ForumStore.Board.id + "/threads/" + store.ForumStore.Board.thread.id + "/posts/");
        }
    }

    public void ReadFile()
    {
        RegisteredFunction.Invoke<bool>("readFileThreads", true);
    }

    public void Dispose()
    {
        store.ForumStore.OnChange -= StateHasChanged;
    }
}
@if (store.ForumStore.Board == null 
    || store.ForumStore.Board.id != int.Parse(BoardId))
{
    <Loading/>
}
else
{
    <BoardQuickSelect />
    <h1>Threads in @store.ForumStore.Board.name</h1>
    @foreach (var item in store.ForumStore.Board.threads)
    {   
        <div style="background-color: lightgrey;border: 1px solid black;padding: 10px;margin:2px;word-wrap:break-word;word-break:break-all;">
            <div style="border-bottom: solid black 1px;">
                No. #@item.post.id made at @item.post.createdDate
            </div>
            <div style="min-height:50px; width:100%;display:table;">
                @if (!string.IsNullOrWhiteSpace(item.post.imagePath) && !string.IsNullOrWhiteSpace(item.post.thumbnailPath))
                {
                    <div style="display:table-cell"><a href="@item.post.imagePath" target="_blank"><img src="@item.post.thumbnailPath" style="display:inline-block;max-height:100px;max-width:100px;" /></a></div>
                }
                <div style="display:table-cell;width:100%;vertical-align:top;">@item.post.content </div>
            </div>
            <a href="/boards/@store.ForumStore.Board.id/threads/@item.id/posts/">View Thread</a>
        </div>
    }
    <br />
    <div>
        <span>New thread: </span><input type="text" @bind(Content) class="form-control" />
        <span>Upload image: </span><input id="file-upload" type="file" accept="image/*" @onchange(a=> ReadFile()) class="form-control" />
        <img id="image" alt="Embedded Image" src="" style="max-height:200px;max-width:200px;" />
        <input id="image-input" type="hidden" />
        <br />
        <button id="submit" type="submit" @onclick(NewThread)>Submit</button>
    </div>
}
<script>
    Blazor.registerFunction('readFileThreads', () => {
        var preview = document.getElementById('image');
        var input = document.getElementById('image-input');
        var file = document.getElementById('file-upload').files[0];
        var button = document.getElementById('submit');
        var reader = new FileReader();

        function readFile(file) {
            return new Promise((resolve, reject) => {
                button.disabled = true;
                reader.onload = (e) => { 
                    resolve(e.target.result);
                };
                reader.readAsDataURL(file);
            })
        }

        if (file) {
            readFile(file).then(result => {
                preview.src = input.value = result;
                button.disabled = false;
            });
        };

        return true;
    });

    Blazor.registerFunction('readImageTextThreads', () => {
        var input = document.getElementById('image-input');
        var preview = document.getElementById('image');
        var file = document.getElementById('file-upload');

        var result = input.value;

        input.value = preview.src = file.value = null;

        return result;
    });
</script>